// R-type 指令測試
// 00000020  // add $t0, $t1, $t2
//00000022  // sub $t0, $t1, $t2
//00000024  // and $t0, $t1, $t2
//00000025  // or  $t0, $t1, $t2
//0000002A  // slt $t0, $t1, $t2

// I-type 指令測試
20090005  // addi $t1, $zero, 5     ; $t1 = 5
200A000A  // addi $t2, $zero, 10    ; $t2 = 10
00000000  // 空指令
00000000  // 空指令
00000000  // 空指令
012A4020  // add $t0, $t1, $t2	    ; $t0 = $t1 + $t2
//8C0A0004  // lw $t2, 4($zero)       ; $t2 = Memory[4]
//AC090007  // sw $t1, 8($zero)       ; Memory[7] = $t1
//00000000    // 11090002  // beq $t0, $t1, L1       ; if ($t0 == $t1) jump to L1
//00000000    // 352B0001  // ori $t3, $t1, 1        ; $t3 = $t1 | 1
//00000000    // 314C0001  // andi $t4, $t2, $t1     ; 
//8C0A0009    // lw $t2, 4($zero) ; $t2 = Memroy[4];

// J-type 指令測試
// 08000002  // j 0x00000008           ; jump to address 8
